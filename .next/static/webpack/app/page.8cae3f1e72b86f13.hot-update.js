"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/renderCanvas.js":
/*!************************************!*\
  !*** ./components/renderCanvas.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renderCanvas: function() { return /* binding */ renderCanvas; }\n/* harmony export */ });\nfunction n(e) {\n    this.init(e || {});\n}\nn.prototype = {\n    init: function(e) {\n        this.phase = e.phase || 0;\n        this.offset = e.offset || 0;\n        this.frequency = e.frequency || 0.001;\n        this.amplitude = e.amplitude || 1;\n    },\n    update: function() {\n        return this.phase += this.frequency, e = this.offset + Math.sin(this.phase) * this.amplitude;\n    },\n    value: function() {\n        return e;\n    }\n};\nfunction Line(e) {\n    this.init(e || {});\n}\n_c = Line;\nLine.prototype = {\n    init: function(e) {\n        this.spring = e.spring + 0.1 * Math.random() - 0.05;\n        this.friction = E.friction + 0.01 * Math.random() - 0.005;\n        this.nodes = [];\n        for(var t, n = 0; n < E.size; n++){\n            t = new Node();\n            t.x = pos.x;\n            t.y = pos.y;\n            this.nodes.push(t);\n        }\n    },\n    update: function() {\n        var e = this.spring, t = this.nodes[0];\n        t.vx += (pos.x - t.x) * e;\n        t.vy += (pos.y - t.y) * e;\n        for(var n, i = 0, a = this.nodes.length; i < a; i++)t = this.nodes[i], 0 < i && (n = this.nodes[i - 1], t.vx += (n.x - t.x) * e, t.vy += (n.y - t.y) * e, t.vx += n.vx * E.dampening, t.vy += n.vy * E.dampening), t.vx *= this.friction, t.vy *= this.friction, t.x += t.vx, t.y += t.vy, e *= E.tension;\n    },\n    draw: function() {\n        var e, t, n = this.nodes[0].x, i = this.nodes[0].y;\n        ctx.beginPath();\n        ctx.moveTo(n, i);\n        for(var a = 1, o = this.nodes.length - 2; a < o; a++){\n            e = this.nodes[a];\n            t = this.nodes[a + 1];\n            n = 0.5 * (e.x + t.x);\n            i = 0.5 * (e.y + t.y);\n            ctx.quadraticCurveTo(e.x, e.y, n, i);\n        }\n        e = this.nodes[a];\n        t = this.nodes[a + 1];\n        ctx.quadraticCurveTo(e.x, e.y, t.x, t.y);\n        ctx.stroke();\n        ctx.closePath();\n    }\n};\nfunction onMousemove(e) {\n    function o() {\n        lines = [];\n        for(var e = 0; e < E.trails; e++)lines.push(new Line({\n            spring: 0.45 + e / E.trails * 0.025\n        }));\n    }\n    function c(e) {\n        e.touches ? (pos.x = e.touches[0].pageX, pos.y = e.touches[0].pageY) : (pos.x = e.clientX, pos.y = e.clientY), e.preventDefault();\n    }\n    function l(e) {\n        1 == e.touches.length && (pos.x = e.touches[0].pageX, pos.y = e.touches[0].pageY);\n    }\n    document.removeEventListener(\"mousemove\", onMousemove), document.removeEventListener(\"touchstart\", onMousemove), document.addEventListener(\"mousemove\", c), document.addEventListener(\"touchmove\", c), document.addEventListener(\"touchstart\", l), c(e), o(), render();\n}\nfunction render() {\n    if (ctx.running) {\n        ctx.globalCompositeOperation = \"source-over\";\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.globalCompositeOperation = \"lighter\";\n        ctx.strokeStyle = \"hsla(\" + (60 + Math.round(f.update())) + \",90%,50%,0.25)\";\n        ctx.lineWidth = 1;\n        for(var e, t = 0; t < E.trails; t++){\n            (e = lines[t]).update();\n            e.draw();\n        }\n        ctx.frame++;\n        window.requestAnimationFrame(render);\n    }\n}\nfunction resizeCanvas() {\n    ctx.canvas.width = window.innerWidth - 20;\n    ctx.canvas.height = window.innerHeight;\n}\nvar ctx, f, e = 0, pos = {}, lines = [], E = {\n    debug: true,\n    friction: 0.5,\n    trails: 20,\n    size: 50,\n    dampening: 0.25,\n    tension: 0.98\n};\nfunction Node() {\n    this.x = 0;\n    this.y = 0;\n    this.vy = 0;\n    this.vx = 0;\n}\n_c1 = Node;\nconst renderCanvas = function() {\n    ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n    ctx.running = true;\n    ctx.frame = 1;\n    f = new n({\n        phase: Math.random() * 2 * Math.PI,\n        amplitude: 85,\n        frequency: 0.0015,\n        offset: 285\n    });\n    document.addEventListener(\"mousemove\", onMousemove);\n    document.addEventListener(\"touchstart\", onMousemove);\n    document.body.addEventListener(\"orientationchange\", resizeCanvas);\n    window.addEventListener(\"resize\", resizeCanvas);\n    window.addEventListener(\"focus\", ()=>{\n        if (!ctx.running) {\n            ctx.running = true;\n            render();\n        }\n    });\n    window.addEventListener(\"blur\", ()=>{\n        ctx.running = true;\n    });\n    resizeCanvas();\n};\nvar _c, _c1;\n$RefreshReg$(_c, \"Line\");\n$RefreshReg$(_c1, \"Node\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/renderCanvas.js\n"));

/***/ })

});